<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="5" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-03-17T22:45:55 IST" name="Suite" finished-at="2023-03-17T22:47:09 IST" duration-ms="74143">
    <groups>
    </groups>
    <test started-at="2023-03-17T22:45:55 IST" name="test" finished-at="2023-03-17T22:47:09 IST" duration-ms="74143">
      <class name="TestNG.Baseclass">
        <test-method is-config="true" signature="beforeTest(java.lang.String)[pri:0, instance:TestNG.Baseclass@245b4bdc]" started-at="2023-03-17T22:45:55 IST" name="beforeTest" finished-at="2023-03-17T22:46:25 IST" duration-ms="30197" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="aftertest()[pri:0, instance:TestNG.Baseclass@245b4bdc]" started-at="2023-03-17T22:47:09 IST" name="aftertest" finished-at="2023-03-17T22:47:09 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftertest -->
      </class> <!-- TestNG.Baseclass -->
      <class name="TestNG.LoginTestNG">
        <test-method is-config="true" signature="beforeclass()[pri:0, instance:TestNG.LoginTestNG@1d2adfbe]" started-at="2023-03-17T22:46:25 IST" name="beforeclass" finished-at="2023-03-17T22:46:26 IST" duration-ms="476" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeclass -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:TestNG.LoginTestNG@1d2adfbe]" started-at="2023-03-17T22:46:26 IST" name="beforemethod" finished-at="2023-03-17T22:46:26 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="VerifyAdmin()[pri:0, instance:TestNG.LoginTestNG@1d2adfbe]" started-at="2023-03-17T22:46:26 IST" name="VerifyAdmin" finished-at="2023-03-17T22:46:26 IST" duration-ms="31" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyAdmin -->
        <test-method is-config="true" signature="afteremethod(org.testng.ITestResult)[pri:0, instance:TestNG.LoginTestNG@1d2adfbe]" started-at="2023-03-17T22:46:26 IST" name="afteremethod" finished-at="2023-03-17T22:46:26 IST" duration-ms="19" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyAdmin status=SUCCESS method=LoginTestNG.VerifyAdmin()[pri:0, instance:TestNG.LoginTestNG@1d2adfbe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afteremethod -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:TestNG.LoginTestNG@1d2adfbe]" started-at="2023-03-17T22:46:26 IST" name="beforemethod" finished-at="2023-03-17T22:46:26 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="VerifyLogininFunctionalityWithCorrectData()[pri:0, instance:TestNG.LoginTestNG@1d2adfbe]" started-at="2023-03-17T22:46:26 IST" name="VerifyLogininFunctionalityWithCorrectData" finished-at="2023-03-17T22:46:49 IST" duration-ms="23645" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyLogininFunctionalityWithCorrectData -->
        <test-method is-config="true" signature="afteremethod(org.testng.ITestResult)[pri:0, instance:TestNG.LoginTestNG@1d2adfbe]" started-at="2023-03-17T22:46:49 IST" name="afteremethod" finished-at="2023-03-17T22:46:51 IST" duration-ms="1897" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyLogininFunctionalityWithCorrectData status=SUCCESS method=LoginTestNG.VerifyLogininFunctionalityWithCorrectData()[pri:0, instance:TestNG.LoginTestNG@1d2adfbe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afteremethod -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:TestNG.LoginTestNG@1d2adfbe]" started-at="2023-03-17T22:46:51 IST" name="beforemethod" finished-at="2023-03-17T22:46:51 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="VerifyLogininFunctionalityWithIncorrectData()[pri:0, instance:TestNG.LoginTestNG@1d2adfbe]" started-at="2023-03-17T22:46:51 IST" name="VerifyLogininFunctionalityWithIncorrectData" finished-at="2023-03-17T22:46:52 IST" duration-ms="1057" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.fail(Assert.java:106)
at TestNG.LoginTestNG.VerifyLogininFunctionalityWithIncorrectData(LoginTestNG.java:78)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyLogininFunctionalityWithIncorrectData -->
        <test-method is-config="true" signature="afteremethod(org.testng.ITestResult)[pri:0, instance:TestNG.LoginTestNG@1d2adfbe]" started-at="2023-03-17T22:46:52 IST" name="afteremethod" finished-at="2023-03-17T22:46:55 IST" duration-ms="2462" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyLogininFunctionalityWithIncorrectData status=FAILURE method=LoginTestNG.VerifyLogininFunctionalityWithIncorrectData()[pri:0, instance:TestNG.LoginTestNG@1d2adfbe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afteremethod -->
        <test-method is-config="true" signature="afterclass()[pri:0, instance:TestNG.LoginTestNG@1d2adfbe]" started-at="2023-03-17T22:46:55 IST" name="afterclass" finished-at="2023-03-17T22:47:09 IST" duration-ms="14117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterclass -->
      </class> <!-- TestNG.LoginTestNG -->
    </test> <!-- test -->
  </suite> <!-- Suite -->
</testng-results>
